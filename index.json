{
  "api/NF.UnityLibs.Managers.Patcher.Common.CRC32.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.CRC32.html",
    "title": "Class CRC32 | nf.unitylibs.managers.patcher",
    "keywords": "Class CRC32 Namespace NF.UnityLibs.Managers.Patcher.Common public static class CRC32 Inheritance object CRC32 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ComputeFromFpath(string) public static uint ComputeFromFpath(string fpath) Parameters fpath string Returns uint ComputeFromSpan(ReadOnlySpan<byte>) public static uint ComputeFromSpan(ReadOnlySpan<byte> data) Parameters data ReadOnlySpan<byte> Returns uint ComputeFromStr(string) public static uint ComputeFromStr(string str) Parameters str string Returns uint ComputeFromStream(Stream) public static uint ComputeFromStream(Stream stream) Parameters stream Stream Returns uint"
  },
  "api/NF.UnityLibs.Managers.Patcher.Common.PatchDataGenerator.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.PatchDataGenerator.html",
    "title": "Class PatchDataGenerator | nf.unitylibs.managers.patcher",
    "keywords": "Class PatchDataGenerator Namespace NF.UnityLibs.Managers.Patcher.Common public static class PatchDataGenerator Inheritance object PatchDataGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateDummyPatchVersionJson(string) public static string CreateDummyPatchVersionJson(string destDir) Parameters destDir string Returns string CreatePatchFileListJson(int, string, HashSet<string>?) public static string? CreatePatchFileListJson(int patchNumber, string patchSrcDir, HashSet<string>? filterOrNull = null) Parameters patchNumber int patchSrcDir string filterOrNull HashSet<string> Returns string"
  },
  "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileList.PatchFileInfo.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileList.PatchFileInfo.html",
    "title": "Class PatchFileList.PatchFileInfo | nf.unitylibs.managers.patcher",
    "keywords": "Class PatchFileList.PatchFileInfo Namespace NF.UnityLibs.Managers.Patcher.Common public sealed class PatchFileList.PatchFileInfo Inheritance object PatchFileList.PatchFileInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Constructors PatchFileInfo(string, long, uint) public PatchFileInfo(string name, long bytes, uint checksum) Parameters name string bytes long checksum uint Properties Bytes public long Bytes { get; } Property Value long Checksum public uint Checksum { get; } Property Value uint Name public string Name { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileList.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileList.html",
    "title": "Class PatchFileList | nf.unitylibs.managers.patcher",
    "keywords": "Class PatchFileList Namespace NF.UnityLibs.Managers.Patcher.Common public sealed class PatchFileList Inheritance object PatchFileList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PatchFileList(int, Dictionary<string, PatchFileInfo>, long) public PatchFileList(int version, Dictionary<string, PatchFileList.PatchFileInfo> dic, long totalBytes) Parameters version int dic Dictionary<string, PatchFileList.PatchFileInfo> totalBytes long PatchFileList(int, int) public PatchFileList(int version, int count) Parameters version int count int Properties Dic public Dictionary<string, PatchFileList.PatchFileInfo> Dic { get; } Property Value Dictionary<string, PatchFileList.PatchFileInfo> TotalBytes public long TotalBytes { get; } Property Value long Version public int Version { get; } Property Value int Methods Clone() public PatchFileList Clone() Returns PatchFileList ToJson() public string ToJson() Returns string UpdateTotalBytes() public long UpdateTotalBytes() Returns long"
  },
  "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileListDifference.PatchStatus.E_STATE.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileListDifference.PatchStatus.E_STATE.html",
    "title": "Enum PatchFileListDifference.PatchStatus.E_STATE | nf.unitylibs.managers.patcher",
    "keywords": "Enum PatchFileListDifference.PatchStatus.E_STATE Namespace NF.UnityLibs.Managers.Patcher.Common public enum PatchFileListDifference.PatchStatus.E_STATE Fields DELETE = 2 SKIP = 0 UPDATE = 1"
  },
  "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileListDifference.PatchStatus.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileListDifference.PatchStatus.html",
    "title": "Class PatchFileListDifference.PatchStatus | nf.unitylibs.managers.patcher",
    "keywords": "Class PatchFileListDifference.PatchStatus Namespace NF.UnityLibs.Managers.Patcher.Common public sealed class PatchFileListDifference.PatchStatus Inheritance object PatchFileListDifference.PatchStatus Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors PatchStatus(PatchFileInfo, E_STATE) public PatchStatus(PatchFileList.PatchFileInfo patchFileInfo, PatchFileListDifference.PatchStatus.E_STATE state) Parameters patchFileInfo PatchFileList.PatchFileInfo state PatchFileListDifference.PatchStatus.E_STATE Properties PatchFileInfo public PatchFileList.PatchFileInfo PatchFileInfo { get; } Property Value PatchFileList.PatchFileInfo State public PatchFileListDifference.PatchStatus.E_STATE State { get; } Property Value PatchFileListDifference.PatchStatus.E_STATE"
  },
  "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileListDifference.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.PatchFileListDifference.html",
    "title": "Class PatchFileListDifference | nf.unitylibs.managers.patcher",
    "keywords": "Class PatchFileListDifference Namespace NF.UnityLibs.Managers.Patcher.Common public class PatchFileListDifference Inheritance object PatchFileListDifference Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DifferenceSetOrNull(PatchFileList?, PatchFileList, string) public static Task<List<PatchFileListDifference.PatchStatus>?> DifferenceSetOrNull(PatchFileList? currPatchFileListOrNull, PatchFileList nextPatchFileList, string patchFileDir) Parameters currPatchFileListOrNull PatchFileList nextPatchFileList PatchFileList patchFileDir string Returns Task<List<PatchFileListDifference.PatchStatus>>"
  },
  "api/NF.UnityLibs.Managers.Patcher.Common.PatchVersion.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.PatchVersion.html",
    "title": "Class PatchVersion | nf.unitylibs.managers.patcher",
    "keywords": "Class PatchVersion Namespace NF.UnityLibs.Managers.Patcher.Common public sealed class PatchVersion : Dictionary<string, int>, IDictionary<string, int>, ICollection<KeyValuePair<string, int>>, IReadOnlyDictionary<string, int>, IReadOnlyCollection<KeyValuePair<string, int>>, IEnumerable<KeyValuePair<string, int>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Inheritance object Dictionary<string, int> PatchVersion Implements IDictionary<string, int> ICollection<KeyValuePair<string, int>> IReadOnlyDictionary<string, int> IReadOnlyCollection<KeyValuePair<string, int>> IEnumerable<KeyValuePair<string, int>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<string, int>.Add(string, int) Dictionary<string, int>.Clear() Dictionary<string, int>.ContainsKey(string) Dictionary<string, int>.ContainsValue(int) Dictionary<string, int>.EnsureCapacity(int) Dictionary<string, int>.GetEnumerator() Dictionary<string, int>.OnDeserialization(object) Dictionary<string, int>.Remove(string) Dictionary<string, int>.Remove(string, out int) Dictionary<string, int>.TrimExcess() Dictionary<string, int>.TrimExcess(int) Dictionary<string, int>.TryAdd(string, int) Dictionary<string, int>.TryGetValue(string, out int) Dictionary<string, int>.Comparer Dictionary<string, int>.Count Dictionary<string, int>.this[string] Dictionary<string, int>.Keys Dictionary<string, int>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Methods ToJson() public string ToJson() Returns string"
  },
  "api/NF.UnityLibs.Managers.Patcher.Common.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.Common.html",
    "title": "Namespace NF.UnityLibs.Managers.Patcher.Common | nf.unitylibs.managers.patcher",
    "keywords": "Namespace NF.UnityLibs.Managers.Patcher.Common Classes CRC32 PatchDataGenerator PatchFileList PatchFileList.PatchFileInfo PatchFileListDifference PatchFileListDifference.PatchStatus PatchVersion Enums PatchFileListDifference.PatchStatus.E_STATE"
  },
  "api/NF.UnityLibs.Managers.Patcher.PatchDataDownloader.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.PatchDataDownloader.html",
    "title": "Class PatchDataDownloader | nf.unitylibs.managers.patcher",
    "keywords": "Class PatchDataDownloader Namespace NF.UnityLibs.Managers.Patcher [Serializable] public sealed class PatchDataDownloader Inheritance object PatchDataDownloader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties DevicePrefix public string DevicePrefix { get; } Property Value string RemoteURL_Base public string RemoteURL_Base { get; } Property Value string RemoteURL_SubPath public string RemoteURL_SubPath { get; } Property Value string Version public int Version { get; set; } Property Value int Methods FromAppVersion(string) public Task<Exception?> FromAppVersion(string appVersion) Parameters appVersion string Returns Task<Exception> FromCurrentAppVersion() public Task<Exception?> FromCurrentAppVersion() Returns Task<Exception> FromPatchBuildVersion(int) public Task<Exception?> FromPatchBuildVersion(int patchBuildVersion) Parameters patchBuildVersion int Returns Task<Exception> Init(string, string) public void Init(string remoteURL_Base, string remoteURL_SubPath) Parameters remoteURL_Base string remoteURL_SubPath string"
  },
  "api/NF.UnityLibs.Managers.Patcher.html": {
    "href": "api/NF.UnityLibs.Managers.Patcher.html",
    "title": "Namespace NF.UnityLibs.Managers.Patcher | nf.unitylibs.managers.patcher",
    "keywords": "Namespace NF.UnityLibs.Managers.Patcher Classes PatchDataDownloader"
  },
  "docs/index.html": {
    "href": "docs/index.html",
    "title": "Introduction | nf.unitylibs.managers.patcher",
    "keywords": "Introduction repo upm https://docs.unity3d.com/Manual/upm-ui-giturl.html https://github.com/netpyoung/nf.unitylibs.managers.patcher.git?path=LocalPackage"
  },
  "index.html": {
    "href": "index.html",
    "title": "",
    "keywords": ""
  }
}